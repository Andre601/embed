name: "Build and Deploy to Production"
on:
  push:
    tags:
      - "v*"
jobs:
  docker:
    name: Build and Publish
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Submodules
        run: git submodule update --init --recursive --remote
      - uses: actions/setup-node@v1
        with:
          node-version: '12.x'
      - name: Get yarn cache directory path
        id: yarn-cache-dir-path
        run: echo "::set-output name=dir::$(yarn cache dir)"
      - uses: actions/cache@v1
        id: yarn-cache # use this to check for `cache-hit` (`steps.yarn-cache.outputs.cache-hit != 'true'`)
        with:
          path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-
      - name: Set Version
        run: sed -i s/v0.0.0-canary/${GITHUB_REF#refs/tags/}/g package.json
      - name: Build
        run: yarn && yarn build
      - name: Docker login
        run: echo ${{ secrets.PAT }} | docker login ghcr.io --username yomanz --password-stdin
      - name: Docker build
        run: docker build -t ghcr.io/widgetbot-io/embed:${GITHUB_REF#refs/tags/} .
      - name: Docker push tag latest
        run: docker push ghcr.io/widgetbot-io/embed:${GITHUB_REF#refs/tags/}
  kubernetes-deploy:
      name: Deploy to Kubernetes
      needs: docker
      runs-on: ubuntu-latest
      steps:
        - name: Use actions/checkout@v2
          uses: actions/checkout@v2
        - name: Submodules
          run: git submodule update --init --recursive --remote
        - name: Kubernetes install
          run: |
            curl -LO https://storage.googleapis.com/kubernetes-release/release/`curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt`/bin/linux/amd64/kubectl
            chmod +x kubectl
            sudo mv kubectl /bin/kubectl
        - name: Kubernetes setup
          run: |
            mkdir ~/.kube
            echo "${{ secrets.KUBE_CLUSTER_CONFIG }}" > ~/.kube/config
        - name: Update docker image
          run: kubectl set image deployment/widgetbot-embed embed=ghcr.io/widgetbot-io/embed:${GITHUB_REF#refs/tags/}
        - name: Verify Kubernetes deployment
          run: kubectl rollout status deployment/widgetbot-embed
        - name: Rollback failed deployment
          if: failure()
          run: kubectl rollout undo deployment/widgetbot-embed
